.wmtFullInput2, .wmtFullInput, .wmtInput, .wmtDateInput, .FullInput, .Input, .wmtHeaderInput, .InputBordB, .wmtSelect {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-family: $input-font-family;
  @include font-size($input-font-size);
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius, 0);

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus($ignore-warning: true);

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

.wmtDisabled:disabled, .wmtDisabled:read-only {
  background-color: $input-disabled-bg !important;
  opacity: 1 !important;
  //border: $input-border-width solid $input-border-color !important;
  border-style: solid !important;
  padding: $input-padding-y $input-padding-x !important;
}

// Small font
.wmtFullInput2, .wmtFullInput, .wmtInput, .wmtDateInput, .FullInput, .Input, .wmtHeaderInput, .InputBordB, .wmtSelect, .wmtMainContainer .custom-select {
	   height: $input-height-sm;
  	padding: $input-padding-y-sm $input-padding-x-sm;
  	@include font-size($input-font-size-sm);
  	line-height: $input-line-height-sm;
  	@include border-radius($input-border-radius-sm);
}

select.wmtFullInput2, select.wmtFullInput, select.wmtInput, select.Input, select.wmtHeaderInput, select.wmtSelect {
  // Remove select outline from select box in FF
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $input-color;
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

textarea.wmtFullInput2, textarea.wmtFullInput, textarea.wmtInput {
  height: auto;
}

.wmtInput, .wmtDateInput, .wmtHeaderInput, .InputBordB {
	display: inline-block !important;
  width: auto;
}

.wmtInput1 {
  display: inline-block !important;
  width: auto !important;
}

.dInput {
	width: 100px !important;
}

.wmtBody4, .wmtBody, .wmtLabel {
  padding-top: add($input-padding-y, $input-border-width);
  padding-bottom: add($input-padding-y, $input-border-width);
  margin-bottom: 0; // Override the `<label>/<legend>` default
  @include font-size(inherit); // Override the `<legend>` default
  line-height: $input-line-height;
}

.wmtBody4, .wmtBody, .wmtLabel {
  padding-top: add($input-padding-y-sm, $input-border-width);
  padding-bottom: add($input-padding-y-sm, $input-border-width);
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
}

.css_button, .css_button_small {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover() {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

    &:active,
    &.active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }
}

.css_button, .css_button_small {
	/*color: $white;
    background-color: $primary;
    border-color: $primary;*/
    @include button-variant($primary, $primary);
}

.css_button, .css_button_small {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}

/* Card */

.wmtMainContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  height: $card-height;
  word-wrap: break-word;
  //background-color: $card-bg;
  background-color: $light !important;
  background-clip: border-box;
  border: $card-border-width solid $card-border-color !important;
  @include border-radius($card-border-radius);

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group {
    border-top: inherit;
    border-bottom: inherit;

    &:first-child {
      border-top-width: 0;
      @include border-top-radius($card-inner-border-radius);
    }

    &:last-child  {
      border-bottom-width: 0;
      @include border-bottom-radius($card-inner-border-radius);
    }
  }

  // Due to specificity of the above selector (`.card > .list-group`), we must
  // use a child selector here to prevent double borders.
  > .card-header + .list-group,
  > .list-group + .card-footer {
    border-top: 0;
  }
}

.wmtCollapseBar, .wmtBottomBar {
	border: 0px solid;
}


.wmtMainContainer .wmtCollapseBar {
  padding: 5px 10px;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  color: $card-cap-color;
  background-color: $card-cap-bg;
  border-bottom: $card-border-width solid $card-border-color !important;

  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }
}

.wmtMainContainer .wmtCollapseBoxWhite {
  padding: 10px 8px;
}

.wmtMainContainer {
	margin: 0px !important;
	margin-bottom: 15px !important;
	box-shadow: none !important;
}

.wmtMainContainer:has(.wmtCollapseBoxWhite[style*="display: none;"]) {
	margin-bottom: 0px !important;
}

.wmtMainContainer.bgWhite {
	background-color: $white !important;
}

.btnActContainer {
	/*grid-auto-columns: 1fr;
    display: inline-grid;
    grid-auto-flow: column;
    grid-gap: 2px;*/
    white-space: nowrap;
}

.btnActContainer > div {
	display: inline-block !important;
	float: unset !important;
}

.btnActContainer .css_button, 
.btnActContainer .css_button_small {
	white-space: nowrap;
}

/* BORDER RENDERING */														
.wmtBorder1All {
	border: solid 1px $border-color;
}
												
.wmtBorder1B {
	border-bottom: solid 1px $border-color;
}
												
.wmtBorder1L {
	border-left: solid 1px $border-color;
}
												
.wmtBorder1R {
	border-right: solid 1px $border-color;
}
											
.wmtBorder1T {
	border-top: solid 1px $border-color;
}

.wmtFormBodyLight {
	@if $white == #fff {
	    background-color: rgb(255, 251, 235) !important;
  	} @else {
  		background-color: $white !important;
  	}
}