<?php

function LoadLinkedTriggers($thisId, $pid)
{
	// THIS FUNCTION CREATES KEYS FOR ANY JAVASCRIPT CHECKS THAT NEED
	// TO HAPPEN FROM THE RTO SCREEN
	$sql = "SHOW TABLES LIKE 'wmt_rto_links'";
	$tres = sqlStatement($sql);
	$trow = sqlFetchArray($tres);
	$frm = '';
	if(is_array($trow)) {
		if(count($trow)) {
			$frm = array_shift($trow);
		}
	}
	if($frm != 'wmt_rto_links') { return false; }
	$key = false;
 	$sql="SELECT * FROM wmt_rto_links WHERE rto_id=? AND pid=?";
 	$lres = sqlStatement($sql, array($thisId, $pid));
	while($lrow = sqlFetchArray($lres)) {
		if($lrow['form_name'] == 'surg1') {
			$tres = sqlStatement("SELECT id, pid, sc1_surg_date FROM form_surg1 ".
				"WHERE id=? AND pid=?",array($lrow['form_id'],$pid)); 
			$trow = sqlFetchArray($tres);
			if($trow['id'] == $lrow['form_id']) {
				if($key) { $key .= '|'; }
				if($trow['sc1_surg_date']) { $key = 'test_target_dt^'.$trow['sc1_surg_date']; }
			}
		}
	}
	return($key);
}

function getAllRTO($thisPid)
{
  $sql = "SELECT * FROM form_rto WHERE pid=? ".
			"ORDER BY rto_status, rto_target_date DESC";
	$all=array();
  $res = sqlStatement($sql, array($thisPid));
  for($iter =0;$row = sqlFetchArray($res);$iter++) { 
		$links = LoadLinkedTriggers($row['id'], $thisPid);
		if($links) {
			$settings = explode('|', $links);
			foreach($settings as $test) {
				$tmp = explode('^',$test);
				$key = $tmp[0];
				$val = $tmp[1];
				$row[$key] = $val;
			}
		}
		$all[] = $row;
	}
  return $all;
}

function getRTObyStatus($thisPid, $status='p', $order='DESC')
{
  $sql = "SELECT * FROM form_rto WHERE pid=? ".
			"AND rto_status=? ORDER BY rto_target_date $order";
	$all=array();
  $res = sqlStatement($sql, array($thisPid, $status));
  for($iter =0;$row = sqlFetchArray($res);$iter++) {
		$links = LoadLinkedTriggers($row['id'], $thisPid);
		if($links) {
			$settings = explode('|', $links);
			foreach($settings as $test) {
				$tmp = explode('^',$test);
				$key = $tmp[0];
				$val = $tmp[1];
				$row[$key] = $val;
			}
		}
		$all[] = $row;
		// echo "In the Load Function: <br>\n";
		// print_r($row);
		// echo "<br>\n";
	}
  return $all;
}

function getRTObyId($thidPid, $thisId='')
{
	if(!$thisId) { return false; }
  $sql = "SELECT * FROM form_rto WHERE id=?";
	$all=array();
  $res = sqlStatement($sql, array($thisId));
  $row = sqlFetchArray($res);
	$links = LoadLinkedTriggers($row['id'], $thisPid);
	if($links) {
		$settings = explode('|', $links);
		foreach($settings as $test) {
			$tmp = explode('^',$test);
			$key = $tmp[0];
			$val = $tmp[1];
			$row[$key] = $val;
		}
	}
	$all[] = $row;
	// echo "We Found This Row<br>\n";
	// print_r($row);
	// echo "<br>\n";
  return $all;
}

function CreateNoteText($thisNum='',$thisFrame='',$thisAction='',$thisDate='',$thisTarget='',$thisDr='',$notes='')
{
	$num=ListLook($thisNum,'RTO_Number');
	$frame=ListLook($thisFrame,'RTO_Frame');
	$action=ListLook($thisAction,'RTO_Action');
	$text="!!Reminder!! Order/RTO Scheduled ";
	if(!empty($thisDate) && !empty($thisNum) && !empty($thisFrame)) {
		$text .= "$num $frame from [$thisDate] ";
	}
	if(!empty($thisTarget)) { $text .= "Approximately on <$thisTarget>"; }
	if(!empty($action)) { $text.='  For: '.$action; }
	$dr = UserLook($thisDr);
	if(!empty($dr)) { $text.="\rOrdered By: ".$dr; }
	$text.="\r$notes\r";
	return $text;
}

function AddRTO($thisPid,$num='',$frame='',$stat='',$note='',$resp='',$action='', $dt='', $target='', $by='')
{
	// echo "Adding RTO in the library for PID: $thisPid</br>\n";
	$test = false;
  if(!VerifyPatientID($thisPid)) { return false; }
	if(!empty($num) || !empty($frame) || !empty($note) ||
											!empty($resp) || !empty($action) || !empty($target)) {
		if($dt == '' || $dt == 0) { $dt=date('Y-m-d'); }
		$note=$note;
  	$sql="INSERT INTO form_rto (date, pid, activity, user, groupname, ".
			"authorized, rto_date, rto_num, rto_frame, rto_status, rto_notes, ".
			"rto_resp_user, rto_action, rto_last_touch, rto_target_date, ".
			"rto_ordered_by) VALUES ".
			"(NOW(), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), ?, ?)";
		$parms= array($thisPid, '1', $_SESSION['authUser'], 
			$_SESSION['authProvider'], $_SESSION['userauthorized'], $dt, $num, $frame,
			$stat, $note, $resp, $action, $target, $by);
		
  	$test=sqlInsert($sql, $parms);
	}
	return $test;
}

function DeleteRTO($thisPid, $item)
{
	// echo "Adding RTO in the library for PID: $thisPid</br>\n";
	$test = false;
  if(!VerifyPatientID($thisPid)) { return false; }
	if(!$item) { return false; }
  $sql="DELETE FROM form_rto WHERE id=? AND pid=?";
  sqlStatement($sql, array($item, $thisPid));

	// Delete the links if the table exists
	$sql = "SHOW TABLES LIKE 'wmt_rto_links'";
	$tres = sqlStatement($sql);
	$trow = sqlFetchArray($tres);
	$frm = array_shift($trow);
	if($frm == 'wmt_rto_links') {
  	$sql="DELETE FROM wmt_rto_links WHERE rto_id=? AND pid=?";
  	sqlStatement($sql, array($item, $thisPid));
	}
	return $test;
}

function UpdateRTOLinks($rto,$pid,$stat='',$action='',$target='')
{
	// Does the links table exist?
	// echo "Checking the links<br>\n";
	$sql = "SHOW TABLES LIKE 'wmt_rto_links'";
	$tres = sqlStatement($sql);
	$trow = sqlFetchArray($tres);
	$frm = array_shift($trow);
	if($frm != 'wmt_rto_links') { return false; }
	// echo "Checking for this RTO ID ($rto) PID ($pid)<br>\n";
 	$sql="SELECT * FROM wmt_rto_links WHERE rto_id=? AND pid=?";
 	$lres = sqlStatement($sql, array($rto, $pid));
	$lrow = sqlFetchArray($lres);
	$form_table = 'form_'.$lrow['form_name'];
	$fid = $lrow['form_id'];
	// echo "Our Form ID: $fid<br>\n";
	// echo "Check Setting for ",$lrow['form_name']," - ",$lrow['link_category'],"<br>\n";
	$value = checkSettingMode('wmt|'.$lrow['form_name'].'|'.
				$lrow['link_category']);
	if(!$value) { return false; }
	// echo "Our Key Value is: $value<br>\n";
	$completed_status = GetCompleteStatus();
	$fields = array();
	if($value) { $fields = explode('|', $value); }	
	$date_target_field = array_shift($fields);
	$date_target_value = $target;
	$done_target_field = array_shift($fields);
	$done_target_value = 0;
	// echo "Date Target: $date_target_field<br>\n";
	// echo "Done Target: $done_target_field<br>\n";
	// echo "Our Action: $action<br>\n";
	if($action == 'sa') {
		$date_target_value = '';
	}
	if($action == 'ref_pend') {
	}
	if($action == 'ref_rcv') {
		$done_target_value = 1;
	}
	// echo "Completed: $completed_status   Ours: $stat<br>\n";
	// echo "Form Table: $form_table<br>\n";
	if($stat == $completed_status) {
		if($form_table == 'form_whc_iud') {
			if(!$date_target_value) { $date_target_value = date('Y-m-d'); }
			$done_target_value = 1;
		}
	} else {
		if($form_table == 'form_whc_iud') {
			$date_target_value = '';
			$done_target_value = '';
		}
	}
	// echo "Target Date Set: $date_target_value<br>\n";
	// echo "Target Done Set: $done_target_value<br>\n";
	if(!$date_target_value && !$done_target_value) { return false; }
	$update = '';
	$parms = array();
	if($date_target_field) { 
		$update = "$date_target_field=?";
		$parms[] = $date_target_value;
	}
	// echo "This is the done target field! : $done_target_field<br>\n";
	if($done_target_field) { 
		// echo "We should be here!!<br>\n";
		if($update) { $update .= ', '; }
		$update .= "$done_target_field=?";
		$parms[] = $done_target_value;
	}
	// echo "Update: $update<br>\n";
	if(!$update) { return false; }
	$parms[] = $fid;
	$parms[] = $pid;
	$sql = "UPDATE $form_table SET $update WHERE id=? AND pid=?";
	$test = sqlStatement($sql, $parms);
	// echo "SQL Statement: $sql<br>\n";
	// echo "Date Target Value: $date_target_value<br>\n";
	// echo "Done Target Value: $done_target_value<br>\n";
	// echo "Form: $form_table  ID ($fid)<br>\n";
}

function UpdateRTO($thisPid,$item,$num='',$frame='',$stat='',$note='',$resp='',$action='', $dt='', $target='', $by='', $force_msg=false)
{
	$test=false;
  if(!VerifyPatientID($thisPid)) { return false; }
	if(!empty($num) || !empty($frame) || !empty($stat) || 
											!empty($note) || !empty($resp) || !empty($action)) {
		// If the responsible user or action has changed we need to store
		$rres= sqlStatement("SELECT rto_action, rto_resp_user , o.codes, o.title ".
			"FROM form_rto LEFT JOIN ".
			"(SELECT * FROM list_options WHERE list_id='RTO_Action') AS o ".
			"on option_id = rto_action ".
			"WHERE pid=? AND id=?", array($thisPid, $item));
		$rrow=sqlFetchArray($rres);
		// echo "Last Responsible: ",$rrow['rto_resp_user']," Current: $resp</br>\n";
		$resp_change=false;
		if($resp != $rrow['rto_resp_user']) {
			// echo "Updating last responsible party</br>\n";
			sqlStatement("UPDATE form_rto SET rto_last_resp_user=? ".
				"WHERE pid=? AND id=?", array($resp, $thisPid, $item));
			$resp_change= true;
		}
		if($resp_change || $force_msg) {
			// Also generate a message for the new responsible user
			$text= CreateNoteText($num, $frame, $action, $dt, $target, $by, $note);
			addPnote($thisPid,$text,$_SESSION['userauthorized'],'1','Order/RTO',$resp);
		}

		// echo "Last Action: ",$rrow['rto_action']," Current: $action</br>\n";
		if($action != $rrow['rto_action']) {
			// echo "Updating Last Action</br>\n";
			sqlStatement("UPDATE form_rto SET rto_last_action=? ".
				"WHERE pid=? AND id=?", array($action, $thisPid, $item));
		}
		// Is This is Billable Action and is it complete?
		if($rrow['codes']) {
			$completed_status = GetCompleteStatus();
			if($stat == $completed_status) {
			}
		}

		$note=$note;
		$dt=$dt;
		$parms= array($dt, $num, $frame, $stat, $note, $resp, $action, $target, $by, $thisPid, $item);
  	$test=sqlStatement("UPDATE form_rto SET rto_last_touch=NOW(), rto_date=?, ".
			"rto_num=?, rto_frame=?, rto_status=?, rto_notes=?, rto_resp_user=?, ".
			"rto_action=?, rto_target_date=?, rto_ordered_by=? WHERE pid=? AND id=?",
			 $parms);
	}

	UpdateRTOLinks($item, $thisPid, $stat, $action, $target);
}

function CheckForLinkedRTO($thisPid,$form_name,$form_id,$category='')
{
	$ret = false;
	if(!$thisPid) { ReportMissingPID(); }
	if(!$form_name) {
		echo "<h><b>Order/RTO Link Check Called With NO Form Name</b></h><br>\n";
		echo "<h2>Please report this error and the circumstances to support.</h2<br>\n";
		exit;
	}
	if(!$form_id) { ReportMissingID(); }
	$parms = array($form_name, $form_id, $thisPid, $category);
	$fres = sqlStatement("SELECT * FROM wmt_rto_links WHERE form_name=? AND ".
			"form_id=? AND pid=? AND link_category=?",$parms);
	if($fres) {
		$frow = sqlFetchArray($fres);
		$ret = $frow['rto_id'];
	}	
	return $ret;
}

function AddRTOLink($thisPid,$form_name,$form_id,$rto_id,$category='')
{
	$ret = false;
	if(!$thisPid) { ReportMissingPID(); }
	if(!$form_name) {
		echo "<h><b>Order/RTO Add Link Called With NO Form Name</b></h><br>\n";
		echo "<h2>Please report this error and the circumstances to support.</h2<br>\n";
		exit;
	}
	if(!$rto_id) {
		echo "<h><b>Order/RTO Add Link Called With NO RTO Link ID</b></h><br>\n";
		echo "<h2>Please report this error and the circumstances to support.</h2<br>\n";
		exit;
	}
	if(!$form_id) { ReportMissingID(); }
	
	$parms = array($form_name, $form_id, $rto_id, $thisPid, $category);
	$test = sqlInsert("INSERT INTO wmt_rto_links (form_name, form_id, rto_id, ".
			"pid, link_category) VALUES (?,?,?,?,?)",$parms);
	return $test;
}

function GetCompleteStatus()
{
	$tmp = '';
 	$sql="SELECT * FROM list_options WHERE UPPER(list_id)='RTO_STATUS' AND ".
		"UPPER(title) LIKE '%COMPLETE%'";
 	$lres = sqlStatement($sql);
	$lrow = sqlFetchArray($lres);
	if($lrow['option_id']) { $tmp = $lrow['option_id']; }
	return($tmp);
}

?>
